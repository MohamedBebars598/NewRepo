//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace login
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class examEntities : DbContext
    {
        public examEntities()
            : base("name=examEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Choice> Choices { get; set; }
        public virtual DbSet<Course> Courses { get; set; }
        public virtual DbSet<Crs_Topic> Crs_Topic { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Exam> Exams { get; set; }
        public virtual DbSet<Instructor> Instructors { get; set; }
        public virtual DbSet<Question> Questions { get; set; }
        public virtual DbSet<Std_Course> Std_Course { get; set; }
        public virtual DbSet<Std_Exam_Ques> Std_Exam_Ques { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual int Course_update(Nullable<int> crs_id, string crs_name, string crsDesc, Nullable<int> crsDur)
        {
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            var crs_nameParameter = crs_name != null ?
                new ObjectParameter("crs_name", crs_name) :
                new ObjectParameter("crs_name", typeof(string));
    
            var crsDescParameter = crsDesc != null ?
                new ObjectParameter("CrsDesc", crsDesc) :
                new ObjectParameter("CrsDesc", typeof(string));
    
            var crsDurParameter = crsDur.HasValue ?
                new ObjectParameter("CrsDur", crsDur) :
                new ObjectParameter("CrsDur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Course_update", crs_idParameter, crs_nameParameter, crsDescParameter, crsDurParameter);
        }
    
        public virtual int Course_updateTopic(Nullable<int> crs_id, string crs_Top)
        {
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("crs_id", crs_id) :
                new ObjectParameter("crs_id", typeof(int));
    
            var crs_TopParameter = crs_Top != null ?
                new ObjectParameter("crs_Top", crs_Top) :
                new ObjectParameter("crs_Top", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Course_updateTopic", crs_idParameter, crs_TopParameter);
        }
    
        public virtual ObjectResult<CourseTopics_Result> CourseTopics(Nullable<int> crsID)
        {
            var crsIDParameter = crsID.HasValue ?
                new ObjectParameter("crsID", crsID) :
                new ObjectParameter("crsID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CourseTopics_Result>("CourseTopics", crsIDParameter);
        }
    
        public virtual ObjectResult<string> deleteChoice(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("deleteChoice", idParameter);
        }
    
        public virtual ObjectResult<string> DeleteCourse(Nullable<int> crsId)
        {
            var crsIdParameter = crsId.HasValue ?
                new ObjectParameter("crsId", crsId) :
                new ObjectParameter("crsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DeleteCourse", crsIdParameter);
        }
    
        public virtual ObjectResult<string> DeleteCourseTopic(Nullable<int> crsId)
        {
            var crsIdParameter = crsId.HasValue ?
                new ObjectParameter("crsId", crsId) :
                new ObjectParameter("crsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DeleteCourseTopic", crsIdParameter);
        }
    
        public virtual ObjectResult<string> DeleteCourseTopicc(Nullable<int> crsId)
        {
            var crsIdParameter = crsId.HasValue ?
                new ObjectParameter("crsId", crsId) :
                new ObjectParameter("crsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DeleteCourseTopicc", crsIdParameter);
        }
    
        public virtual ObjectResult<string> DeleteDepartment(Nullable<int> deptId)
        {
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DeleteDepartment", deptIdParameter);
        }
    
        public virtual int DeleteExam(Nullable<int> exam_ID)
        {
            var exam_IDParameter = exam_ID.HasValue ?
                new ObjectParameter("Exam_ID", exam_ID) :
                new ObjectParameter("Exam_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteExam", exam_IDParameter);
        }
    
        public virtual int deleteIns_Course(Nullable<int> ins_ID, Nullable<int> crs_ID)
        {
            var ins_IDParameter = ins_ID.HasValue ?
                new ObjectParameter("ins_ID", ins_ID) :
                new ObjectParameter("ins_ID", typeof(int));
    
            var crs_IDParameter = crs_ID.HasValue ?
                new ObjectParameter("crs_ID", crs_ID) :
                new ObjectParameter("crs_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteIns_Course", ins_IDParameter, crs_IDParameter);
        }
    
        public virtual int DeleteInstructorByID(Nullable<int> ins_ID)
        {
            var ins_IDParameter = ins_ID.HasValue ?
                new ObjectParameter("Ins_ID", ins_ID) :
                new ObjectParameter("Ins_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteInstructorByID", ins_IDParameter);
        }
    
        public virtual int deleteQuestion(Nullable<int> specificID)
        {
            var specificIDParameter = specificID.HasValue ?
                new ObjectParameter("SpecificID", specificID) :
                new ObjectParameter("SpecificID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteQuestion", specificIDParameter);
        }
    
        public virtual ObjectResult<string> deleteQuestionBebars(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("deleteQuestionBebars", idParameter);
        }
    
        public virtual ObjectResult<string> deletestd_exam_ques(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("deletestd_exam_ques", idParameter);
        }
    
        public virtual int deleteStdCourse(Nullable<int> stdID)
        {
            var stdIDParameter = stdID.HasValue ?
                new ObjectParameter("stdID", stdID) :
                new ObjectParameter("stdID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteStdCourse", stdIDParameter);
        }
    
        public virtual int deleteStud(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteStud", idParameter);
        }
    
        public virtual ObjectResult<string> deleteUser(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("deleteUser", usernameParameter);
        }
    
        public virtual int Department_updatee(Nullable<int> deptID, string deptName, string deptLoc, Nullable<System.DateTime> managerHireDate, Nullable<int> managerID)
        {
            var deptIDParameter = deptID.HasValue ?
                new ObjectParameter("DeptID", deptID) :
                new ObjectParameter("DeptID", typeof(int));
    
            var deptNameParameter = deptName != null ?
                new ObjectParameter("DeptName", deptName) :
                new ObjectParameter("DeptName", typeof(string));
    
            var deptLocParameter = deptLoc != null ?
                new ObjectParameter("DeptLoc", deptLoc) :
                new ObjectParameter("DeptLoc", typeof(string));
    
            var managerHireDateParameter = managerHireDate.HasValue ?
                new ObjectParameter("ManagerHireDate", managerHireDate) :
                new ObjectParameter("ManagerHireDate", typeof(System.DateTime));
    
            var managerIDParameter = managerID.HasValue ?
                new ObjectParameter("ManagerID", managerID) :
                new ObjectParameter("ManagerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Department_updatee", deptIDParameter, deptNameParameter, deptLocParameter, managerHireDateParameter, managerIDParameter);
        }
    
        public virtual int ExamAnswers(Nullable<int> exId, Nullable<int> stId, string num1, string num2, string num3, string num4, string num5, string num6, string num7, string num8, string num9, string num10)
        {
            var exIdParameter = exId.HasValue ?
                new ObjectParameter("exId", exId) :
                new ObjectParameter("exId", typeof(int));
    
            var stIdParameter = stId.HasValue ?
                new ObjectParameter("stId", stId) :
                new ObjectParameter("stId", typeof(int));
    
            var num1Parameter = num1 != null ?
                new ObjectParameter("num1", num1) :
                new ObjectParameter("num1", typeof(string));
    
            var num2Parameter = num2 != null ?
                new ObjectParameter("num2", num2) :
                new ObjectParameter("num2", typeof(string));
    
            var num3Parameter = num3 != null ?
                new ObjectParameter("num3", num3) :
                new ObjectParameter("num3", typeof(string));
    
            var num4Parameter = num4 != null ?
                new ObjectParameter("num4", num4) :
                new ObjectParameter("num4", typeof(string));
    
            var num5Parameter = num5 != null ?
                new ObjectParameter("num5", num5) :
                new ObjectParameter("num5", typeof(string));
    
            var num6Parameter = num6 != null ?
                new ObjectParameter("num6", num6) :
                new ObjectParameter("num6", typeof(string));
    
            var num7Parameter = num7 != null ?
                new ObjectParameter("num7", num7) :
                new ObjectParameter("num7", typeof(string));
    
            var num8Parameter = num8 != null ?
                new ObjectParameter("num8", num8) :
                new ObjectParameter("num8", typeof(string));
    
            var num9Parameter = num9 != null ?
                new ObjectParameter("num9", num9) :
                new ObjectParameter("num9", typeof(string));
    
            var num10Parameter = num10 != null ?
                new ObjectParameter("num10", num10) :
                new ObjectParameter("num10", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExamAnswers", exIdParameter, stIdParameter, num1Parameter, num2Parameter, num3Parameter, num4Parameter, num5Parameter, num6Parameter, num7Parameter, num8Parameter, num9Parameter, num10Parameter);
        }
    
        public virtual int examCorrection(Nullable<int> examID, Nullable<int> studID)
        {
            var examIDParameter = examID.HasValue ?
                new ObjectParameter("examID", examID) :
                new ObjectParameter("examID", typeof(int));
    
            var studIDParameter = studID.HasValue ?
                new ObjectParameter("studID", studID) :
                new ObjectParameter("studID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("examCorrection", examIDParameter, studIDParameter);
        }
    
        public virtual int generateExamByCourseID(Nullable<int> cId, Nullable<int> insId, Nullable<int> stdId, Nullable<int> numOfTrueFalse, Nullable<int> numOfMCQ)
        {
            var cIdParameter = cId.HasValue ?
                new ObjectParameter("cId", cId) :
                new ObjectParameter("cId", typeof(int));
    
            var insIdParameter = insId.HasValue ?
                new ObjectParameter("insId", insId) :
                new ObjectParameter("insId", typeof(int));
    
            var stdIdParameter = stdId.HasValue ?
                new ObjectParameter("StdId", stdId) :
                new ObjectParameter("StdId", typeof(int));
    
            var numOfTrueFalseParameter = numOfTrueFalse.HasValue ?
                new ObjectParameter("numOfTrueFalse", numOfTrueFalse) :
                new ObjectParameter("numOfTrueFalse", typeof(int));
    
            var numOfMCQParameter = numOfMCQ.HasValue ?
                new ObjectParameter("numOfMCQ", numOfMCQ) :
                new ObjectParameter("numOfMCQ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("generateExamByCourseID", cIdParameter, insIdParameter, stdIdParameter, numOfTrueFalseParameter, numOfMCQParameter);
        }
    
        public virtual int GenerateExameByCourseName(string course, Nullable<int> ins_ID, Nullable<int> std_ID, Nullable<int> tFNum, Nullable<int> mCQNum)
        {
            var courseParameter = course != null ?
                new ObjectParameter("Course", course) :
                new ObjectParameter("Course", typeof(string));
    
            var ins_IDParameter = ins_ID.HasValue ?
                new ObjectParameter("Ins_ID", ins_ID) :
                new ObjectParameter("Ins_ID", typeof(int));
    
            var std_IDParameter = std_ID.HasValue ?
                new ObjectParameter("Std_ID", std_ID) :
                new ObjectParameter("Std_ID", typeof(int));
    
            var tFNumParameter = tFNum.HasValue ?
                new ObjectParameter("TFNum", tFNum) :
                new ObjectParameter("TFNum", typeof(int));
    
            var mCQNumParameter = mCQNum.HasValue ?
                new ObjectParameter("MCQNum", mCQNum) :
                new ObjectParameter("MCQNum", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerateExameByCourseName", courseParameter, ins_IDParameter, std_IDParameter, tFNumParameter, mCQNumParameter);
        }
    
        public virtual ObjectResult<string> inseretQuestion(Nullable<int> id, Nullable<int> crsId, string qContent, Nullable<int> qGrade, string qType, Nullable<int> ans)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var crsIdParameter = crsId.HasValue ?
                new ObjectParameter("crsId", crsId) :
                new ObjectParameter("crsId", typeof(int));
    
            var qContentParameter = qContent != null ?
                new ObjectParameter("qContent", qContent) :
                new ObjectParameter("qContent", typeof(string));
    
            var qGradeParameter = qGrade.HasValue ?
                new ObjectParameter("qGrade", qGrade) :
                new ObjectParameter("qGrade", typeof(int));
    
            var qTypeParameter = qType != null ?
                new ObjectParameter("qType", qType) :
                new ObjectParameter("qType", typeof(string));
    
            var ansParameter = ans.HasValue ?
                new ObjectParameter("ans", ans) :
                new ObjectParameter("ans", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("inseretQuestion", idParameter, crsIdParameter, qContentParameter, qGradeParameter, qTypeParameter, ansParameter);
        }
    
        public virtual int inserQuestion(Nullable<int> specificID, Nullable<int> specificCrs, string content, Nullable<int> grade, string type, Nullable<int> ans)
        {
            var specificIDParameter = specificID.HasValue ?
                new ObjectParameter("SpecificID", specificID) :
                new ObjectParameter("SpecificID", typeof(int));
    
            var specificCrsParameter = specificCrs.HasValue ?
                new ObjectParameter("specificCrs", specificCrs) :
                new ObjectParameter("specificCrs", typeof(int));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var gradeParameter = grade.HasValue ?
                new ObjectParameter("grade", grade) :
                new ObjectParameter("grade", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var ansParameter = ans.HasValue ?
                new ObjectParameter("Ans", ans) :
                new ObjectParameter("Ans", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("inserQuestion", specificIDParameter, specificCrsParameter, contentParameter, gradeParameter, typeParameter, ansParameter);
        }
    
        public virtual ObjectResult<string> InsertChoice(Nullable<int> id, Nullable<int> qId, string content, string ans)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var qIdParameter = qId.HasValue ?
                new ObjectParameter("qId", qId) :
                new ObjectParameter("qId", typeof(int));
    
            var contentParameter = content != null ?
                new ObjectParameter("content", content) :
                new ObjectParameter("content", typeof(string));
    
            var ansParameter = ans != null ?
                new ObjectParameter("ans", ans) :
                new ObjectParameter("ans", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("InsertChoice", idParameter, qIdParameter, contentParameter, ansParameter);
        }
    
        public virtual ObjectResult<string> InsertCourse(Nullable<int> crsID, string crsName, string crsDesc, Nullable<int> crsDur)
        {
            var crsIDParameter = crsID.HasValue ?
                new ObjectParameter("CrsID", crsID) :
                new ObjectParameter("CrsID", typeof(int));
    
            var crsNameParameter = crsName != null ?
                new ObjectParameter("CrsName", crsName) :
                new ObjectParameter("CrsName", typeof(string));
    
            var crsDescParameter = crsDesc != null ?
                new ObjectParameter("CrsDesc", crsDesc) :
                new ObjectParameter("CrsDesc", typeof(string));
    
            var crsDurParameter = crsDur.HasValue ?
                new ObjectParameter("CrsDur", crsDur) :
                new ObjectParameter("CrsDur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("InsertCourse", crsIDParameter, crsNameParameter, crsDescParameter, crsDurParameter);
        }
    
        public virtual ObjectResult<string> InsertCourseTopic(Nullable<int> crsID, string crsTopic)
        {
            var crsIDParameter = crsID.HasValue ?
                new ObjectParameter("CrsID", crsID) :
                new ObjectParameter("CrsID", typeof(int));
    
            var crsTopicParameter = crsTopic != null ?
                new ObjectParameter("CrsTopic", crsTopic) :
                new ObjectParameter("CrsTopic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("InsertCourseTopic", crsIDParameter, crsTopicParameter);
        }
    
        public virtual ObjectResult<string> InsertDepartment(Nullable<int> deptID, string deptName, string deptLoc, Nullable<System.DateTime> managerHireDate, Nullable<int> managerID)
        {
            var deptIDParameter = deptID.HasValue ?
                new ObjectParameter("DeptID", deptID) :
                new ObjectParameter("DeptID", typeof(int));
    
            var deptNameParameter = deptName != null ?
                new ObjectParameter("DeptName", deptName) :
                new ObjectParameter("DeptName", typeof(string));
    
            var deptLocParameter = deptLoc != null ?
                new ObjectParameter("DeptLoc", deptLoc) :
                new ObjectParameter("DeptLoc", typeof(string));
    
            var managerHireDateParameter = managerHireDate.HasValue ?
                new ObjectParameter("ManagerHireDate", managerHireDate) :
                new ObjectParameter("ManagerHireDate", typeof(System.DateTime));
    
            var managerIDParameter = managerID.HasValue ?
                new ObjectParameter("ManagerID", managerID) :
                new ObjectParameter("ManagerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("InsertDepartment", deptIDParameter, deptNameParameter, deptLocParameter, managerHireDateParameter, managerIDParameter);
        }
    
        public virtual int InsertExam(Nullable<int> crs_ID, Nullable<int> ins_ID)
        {
            var crs_IDParameter = crs_ID.HasValue ?
                new ObjectParameter("Crs_ID", crs_ID) :
                new ObjectParameter("Crs_ID", typeof(int));
    
            var ins_IDParameter = ins_ID.HasValue ?
                new ObjectParameter("ins_ID", ins_ID) :
                new ObjectParameter("ins_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertExam", crs_IDParameter, ins_IDParameter);
        }
    
        public virtual int insertIns_Course(Nullable<int> ins_ID, Nullable<int> crs_ID)
        {
            var ins_IDParameter = ins_ID.HasValue ?
                new ObjectParameter("ins_ID", ins_ID) :
                new ObjectParameter("ins_ID", typeof(int));
    
            var crs_IDParameter = crs_ID.HasValue ?
                new ObjectParameter("crs_ID", crs_ID) :
                new ObjectParameter("crs_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertIns_Course", ins_IDParameter, crs_IDParameter);
        }
    
        public virtual int InsertInstructor(Nullable<int> ins_ID, string fname, string lname, string degree, Nullable<int> salary, Nullable<int> dept)
        {
            var ins_IDParameter = ins_ID.HasValue ?
                new ObjectParameter("Ins_ID", ins_ID) :
                new ObjectParameter("Ins_ID", typeof(int));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var degreeParameter = degree != null ?
                new ObjectParameter("degree", degree) :
                new ObjectParameter("degree", typeof(string));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("salary", salary) :
                new ObjectParameter("salary", typeof(int));
    
            var deptParameter = dept.HasValue ?
                new ObjectParameter("dept", dept) :
                new ObjectParameter("dept", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertInstructor", ins_IDParameter, fnameParameter, lnameParameter, degreeParameter, salaryParameter, deptParameter);
        }
    
        public virtual int insertStdCourse(Nullable<int> stdID, Nullable<int> stdCRS, Nullable<int> grade)
        {
            var stdIDParameter = stdID.HasValue ?
                new ObjectParameter("stdID", stdID) :
                new ObjectParameter("stdID", typeof(int));
    
            var stdCRSParameter = stdCRS.HasValue ?
                new ObjectParameter("stdCRS", stdCRS) :
                new ObjectParameter("stdCRS", typeof(int));
    
            var gradeParameter = grade.HasValue ?
                new ObjectParameter("grade", grade) :
                new ObjectParameter("grade", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertStdCourse", stdIDParameter, stdCRSParameter, gradeParameter);
        }
    
        public virtual ObjectResult<InstructorReport_Result> InstructorReport(Nullable<int> insId)
        {
            var insIdParameter = insId.HasValue ?
                new ObjectParameter("insId", insId) :
                new ObjectParameter("insId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InstructorReport_Result>("InstructorReport", insIdParameter);
        }
    
        public virtual ObjectResult<QandAexam_Result> QandAexam(Nullable<int> exam_id)
        {
            var exam_idParameter = exam_id.HasValue ?
                new ObjectParameter("exam_id", exam_id) :
                new ObjectParameter("exam_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QandAexam_Result>("QandAexam", exam_idParameter);
        }
    
        public virtual ObjectResult<ReportStudentExamAnswer_Result> ReportStudentExamAnswer(Nullable<int> examNum, Nullable<int> stdID)
        {
            var examNumParameter = examNum.HasValue ?
                new ObjectParameter("ExamNum", examNum) :
                new ObjectParameter("ExamNum", typeof(int));
    
            var stdIDParameter = stdID.HasValue ?
                new ObjectParameter("StdID", stdID) :
                new ObjectParameter("StdID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportStudentExamAnswer_Result>("ReportStudentExamAnswer", examNumParameter, stdIDParameter);
        }
    
        public virtual ObjectResult<retrieveStdByDepID_Result> retrieveStdByDepID(Nullable<int> deptID)
        {
            var deptIDParameter = deptID.HasValue ?
                new ObjectParameter("deptID", deptID) :
                new ObjectParameter("deptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<retrieveStdByDepID_Result>("retrieveStdByDepID", deptIDParameter);
        }
    
        public virtual ObjectResult<select_course_Result> select_course(Nullable<int> crs_ID)
        {
            var crs_IDParameter = crs_ID.HasValue ?
                new ObjectParameter("Crs_ID", crs_ID) :
                new ObjectParameter("Crs_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_course_Result>("select_course", crs_IDParameter);
        }
    
        public virtual ObjectResult<select_CourseTopic_Result> select_CourseTopic(Nullable<int> crs_ID)
        {
            var crs_IDParameter = crs_ID.HasValue ?
                new ObjectParameter("Crs_ID", crs_ID) :
                new ObjectParameter("Crs_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_CourseTopic_Result>("select_CourseTopic", crs_IDParameter);
        }
    
        public virtual ObjectResult<select_Department_Result> select_Department(Nullable<int> dept_ID)
        {
            var dept_IDParameter = dept_ID.HasValue ?
                new ObjectParameter("Dept_ID", dept_ID) :
                new ObjectParameter("Dept_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_Department_Result>("select_Department", dept_IDParameter);
        }
    
        public virtual ObjectResult<SelectAllExam_Result> SelectAllExam()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllExam_Result>("SelectAllExam");
        }
    
        public virtual ObjectResult<SelectChoice_Result> SelectChoice(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectChoice_Result>("SelectChoice", idParameter);
        }
    
        public virtual ObjectResult<SelectExamByID_Result> SelectExamByID(Nullable<int> exam_ID)
        {
            var exam_IDParameter = exam_ID.HasValue ?
                new ObjectParameter("Exam_ID", exam_ID) :
                new ObjectParameter("Exam_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectExamByID_Result>("SelectExamByID", exam_IDParameter);
        }
    
        public virtual ObjectResult<selectIns_Course_Result> selectIns_Course(Nullable<int> ins_ID)
        {
            var ins_IDParameter = ins_ID.HasValue ?
                new ObjectParameter("ins_ID", ins_ID) :
                new ObjectParameter("ins_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectIns_Course_Result>("selectIns_Course", ins_IDParameter);
        }
    
        public virtual ObjectResult<SelectInstructorByID_Result> SelectInstructorByID(Nullable<int> ins_ID)
        {
            var ins_IDParameter = ins_ID.HasValue ?
                new ObjectParameter("Ins_ID", ins_ID) :
                new ObjectParameter("Ins_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectInstructorByID_Result>("SelectInstructorByID", ins_IDParameter);
        }
    
        public virtual ObjectResult<SelectQuestion_Result> SelectQuestion(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectQuestion_Result>("SelectQuestion", idParameter);
        }
    
        public virtual ObjectResult<showQuestions_Result> showQuestions(Nullable<int> specificCrs)
        {
            var specificCrsParameter = specificCrs.HasValue ?
                new ObjectParameter("SpecificCrs", specificCrs) :
                new ObjectParameter("SpecificCrs", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<showQuestions_Result>("showQuestions", specificCrsParameter);
        }
    
        public virtual ObjectResult<showStdCourse_Result> showStdCourse(Nullable<int> specificCrs, Nullable<int> specificStd)
        {
            var specificCrsParameter = specificCrs.HasValue ?
                new ObjectParameter("SpecificCrs", specificCrs) :
                new ObjectParameter("SpecificCrs", typeof(int));
    
            var specificStdParameter = specificStd.HasValue ?
                new ObjectParameter("specificStd", specificStd) :
                new ObjectParameter("specificStd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<showStdCourse_Result>("showStdCourse", specificCrsParameter, specificStdParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int std_exam_quesInsert(Nullable<int> stud_id, Nullable<int> exam_id, Nullable<int> ques_id, string stud_answer)
        {
            var stud_idParameter = stud_id.HasValue ?
                new ObjectParameter("stud_id", stud_id) :
                new ObjectParameter("stud_id", typeof(int));
    
            var exam_idParameter = exam_id.HasValue ?
                new ObjectParameter("exam_id", exam_id) :
                new ObjectParameter("exam_id", typeof(int));
    
            var ques_idParameter = ques_id.HasValue ?
                new ObjectParameter("ques_id", ques_id) :
                new ObjectParameter("ques_id", typeof(int));
    
            var stud_answerParameter = stud_answer != null ?
                new ObjectParameter("stud_answer", stud_answer) :
                new ObjectParameter("stud_answer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("std_exam_quesInsert", stud_idParameter, exam_idParameter, ques_idParameter, stud_answerParameter);
        }
    
        public virtual ObjectResult<std_exam_quesSelect_Result> std_exam_quesSelect(Nullable<int> id, string star)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var starParameter = star != null ?
                new ObjectParameter("star", star) :
                new ObjectParameter("star", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<std_exam_quesSelect_Result>("std_exam_quesSelect", idParameter, starParameter);
        }
    
        public virtual ObjectResult<StudentReport_Result> StudentReport(Nullable<int> stdId)
        {
            var stdIdParameter = stdId.HasValue ?
                new ObjectParameter("stdId", stdId) :
                new ObjectParameter("stdId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StudentReport_Result>("StudentReport", stdIdParameter);
        }
    
        public virtual int studInsert(Nullable<int> id, string fname, string lname, Nullable<System.DateTime> bod, string address, string username, Nullable<int> deptid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var bodParameter = bod.HasValue ?
                new ObjectParameter("bod", bod) :
                new ObjectParameter("bod", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var deptidParameter = deptid.HasValue ?
                new ObjectParameter("deptid", deptid) :
                new ObjectParameter("deptid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("studInsert", idParameter, fnameParameter, lnameParameter, bodParameter, addressParameter, usernameParameter, deptidParameter);
        }
    
        public virtual ObjectResult<studSelect_Result> studSelect(Nullable<int> id, string fname, string lname, Nullable<System.DateTime> bod, string address, string username, Nullable<int> deptid, string star)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var bodParameter = bod.HasValue ?
                new ObjectParameter("bod", bod) :
                new ObjectParameter("bod", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var deptidParameter = deptid.HasValue ?
                new ObjectParameter("deptid", deptid) :
                new ObjectParameter("deptid", typeof(int));
    
            var starParameter = star != null ?
                new ObjectParameter("star", star) :
                new ObjectParameter("star", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<studSelect_Result>("studSelect", idParameter, fnameParameter, lnameParameter, bodParameter, addressParameter, usernameParameter, deptidParameter, starParameter);
        }
    
        public virtual ObjectResult<string> updateChoice(Nullable<int> id, Nullable<int> qId, string content, string ans)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var qIdParameter = qId.HasValue ?
                new ObjectParameter("qId", qId) :
                new ObjectParameter("qId", typeof(int));
    
            var contentParameter = content != null ?
                new ObjectParameter("content", content) :
                new ObjectParameter("content", typeof(string));
    
            var ansParameter = ans != null ?
                new ObjectParameter("ans", ans) :
                new ObjectParameter("ans", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("updateChoice", idParameter, qIdParameter, contentParameter, ansParameter);
        }
    
        public virtual int UpdateExam(Nullable<int> exam_ID, Nullable<int> crs_ID, Nullable<int> ins_ID, Nullable<int> grade)
        {
            var exam_IDParameter = exam_ID.HasValue ?
                new ObjectParameter("Exam_ID", exam_ID) :
                new ObjectParameter("Exam_ID", typeof(int));
    
            var crs_IDParameter = crs_ID.HasValue ?
                new ObjectParameter("crs_ID", crs_ID) :
                new ObjectParameter("crs_ID", typeof(int));
    
            var ins_IDParameter = ins_ID.HasValue ?
                new ObjectParameter("ins_ID", ins_ID) :
                new ObjectParameter("ins_ID", typeof(int));
    
            var gradeParameter = grade.HasValue ?
                new ObjectParameter("Grade", grade) :
                new ObjectParameter("Grade", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateExam", exam_IDParameter, crs_IDParameter, ins_IDParameter, gradeParameter);
        }
    
        public virtual int UpdateExamGrade(Nullable<int> exam_ID, Nullable<int> grade)
        {
            var exam_IDParameter = exam_ID.HasValue ?
                new ObjectParameter("Exam_ID", exam_ID) :
                new ObjectParameter("Exam_ID", typeof(int));
    
            var gradeParameter = grade.HasValue ?
                new ObjectParameter("Grade", grade) :
                new ObjectParameter("Grade", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateExamGrade", exam_IDParameter, gradeParameter);
        }
    
        public virtual int updateIns_Course(Nullable<int> ins_ID, Nullable<int> crs_ID)
        {
            var ins_IDParameter = ins_ID.HasValue ?
                new ObjectParameter("ins_ID", ins_ID) :
                new ObjectParameter("ins_ID", typeof(int));
    
            var crs_IDParameter = crs_ID.HasValue ?
                new ObjectParameter("crs_ID", crs_ID) :
                new ObjectParameter("crs_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateIns_Course", ins_IDParameter, crs_IDParameter);
        }
    
        public virtual int UpdateInstuctorByID(Nullable<int> ins_ID, string fname, string lname, string degree, Nullable<int> salary, Nullable<int> dept)
        {
            var ins_IDParameter = ins_ID.HasValue ?
                new ObjectParameter("Ins_ID", ins_ID) :
                new ObjectParameter("Ins_ID", typeof(int));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var degreeParameter = degree != null ?
                new ObjectParameter("degree", degree) :
                new ObjectParameter("degree", typeof(string));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("salary", salary) :
                new ObjectParameter("salary", typeof(int));
    
            var deptParameter = dept.HasValue ?
                new ObjectParameter("dept", dept) :
                new ObjectParameter("dept", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateInstuctorByID", ins_IDParameter, fnameParameter, lnameParameter, degreeParameter, salaryParameter, deptParameter);
        }
    
        public virtual ObjectResult<string> updateQuestion(Nullable<int> id, Nullable<int> crsId, string qContent, Nullable<int> qGrade, string qType, Nullable<int> ans)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var crsIdParameter = crsId.HasValue ?
                new ObjectParameter("crsId", crsId) :
                new ObjectParameter("crsId", typeof(int));
    
            var qContentParameter = qContent != null ?
                new ObjectParameter("qContent", qContent) :
                new ObjectParameter("qContent", typeof(string));
    
            var qGradeParameter = qGrade.HasValue ?
                new ObjectParameter("qGrade", qGrade) :
                new ObjectParameter("qGrade", typeof(int));
    
            var qTypeParameter = qType != null ?
                new ObjectParameter("qType", qType) :
                new ObjectParameter("qType", typeof(string));
    
            var ansParameter = ans.HasValue ?
                new ObjectParameter("ans", ans) :
                new ObjectParameter("ans", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("updateQuestion", idParameter, crsIdParameter, qContentParameter, qGradeParameter, qTypeParameter, ansParameter);
        }
    
        public virtual int updateQuestions(Nullable<int> specificID, Nullable<int> specificCrs, string content, Nullable<int> grade, string type, Nullable<int> ans)
        {
            var specificIDParameter = specificID.HasValue ?
                new ObjectParameter("SpecificID", specificID) :
                new ObjectParameter("SpecificID", typeof(int));
    
            var specificCrsParameter = specificCrs.HasValue ?
                new ObjectParameter("specificCrs", specificCrs) :
                new ObjectParameter("specificCrs", typeof(int));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var gradeParameter = grade.HasValue ?
                new ObjectParameter("grade", grade) :
                new ObjectParameter("grade", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var ansParameter = ans.HasValue ?
                new ObjectParameter("Ans", ans) :
                new ObjectParameter("Ans", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateQuestions", specificIDParameter, specificCrsParameter, contentParameter, gradeParameter, typeParameter, ansParameter);
        }
    
        public virtual int updateStdCourse(Nullable<int> stdID, Nullable<int> stdCRS, Nullable<int> grade)
        {
            var stdIDParameter = stdID.HasValue ?
                new ObjectParameter("stdID", stdID) :
                new ObjectParameter("stdID", typeof(int));
    
            var stdCRSParameter = stdCRS.HasValue ?
                new ObjectParameter("stdCRS", stdCRS) :
                new ObjectParameter("stdCRS", typeof(int));
    
            var gradeParameter = grade.HasValue ?
                new ObjectParameter("grade", grade) :
                new ObjectParameter("grade", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateStdCourse", stdIDParameter, stdCRSParameter, gradeParameter);
        }
    
        public virtual int updateStud(Nullable<int> id, string fname, string lname, Nullable<System.DateTime> bod, string address, string username, Nullable<int> deptid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var bodParameter = bod.HasValue ?
                new ObjectParameter("bod", bod) :
                new ObjectParameter("bod", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var deptidParameter = deptid.HasValue ?
                new ObjectParameter("deptid", deptid) :
                new ObjectParameter("deptid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateStud", idParameter, fnameParameter, lnameParameter, bodParameter, addressParameter, usernameParameter, deptidParameter);
        }
    
        public virtual int updateUser(string username, string email, string pass, Nullable<bool> is_stud)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var is_studParameter = is_stud.HasValue ?
                new ObjectParameter("is_stud", is_stud) :
                new ObjectParameter("is_stud", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateUser", usernameParameter, emailParameter, passParameter, is_studParameter);
        }
    
        public virtual int userInsert(string username, string email, string pass, string gender, Nullable<bool> is_stud)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var is_studParameter = is_stud.HasValue ?
                new ObjectParameter("is_stud", is_stud) :
                new ObjectParameter("is_stud", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("userInsert", usernameParameter, emailParameter, passParameter, genderParameter, is_studParameter);
        }
    
        public virtual ObjectResult<userSelect_Result> userSelect(string name, string star)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var starParameter = star != null ?
                new ObjectParameter("star", star) :
                new ObjectParameter("star", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<userSelect_Result>("userSelect", nameParameter, starParameter);
        }
    
        public virtual ObjectResult<string> Validation(string userName, Nullable<int> userPassword)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var userPasswordParameter = userPassword.HasValue ?
                new ObjectParameter("userPassword", userPassword) :
                new ObjectParameter("userPassword", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Validation", userNameParameter, userPasswordParameter);
        }
    }
}
